esphome:
  name: ${name}
  friendly_name: ${name}
  includes:
    - ${include_path}/include

esp32:
  board: esp32-devkitlipo

# Enable logging
logger:
  level: VERY_VERBOSE

improv_serial:
# Enable Home Assistant API
api:
  encryption:
    key: ${api_encryption}

ota:
  password: ${ota_password}

mqtt:
  broker: 10.0.13.228
  port: 1883
  username: aquarium
  client_id: aquarium

wifi:
  ssid: ${wifi_ssid}
  password: ${wifi_password}

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32-Aquarium-Water"
    password: "dLW8Ah7ouCN7"

dallas:
  - pin: 16 # RX2  8
    update_interval: 10s

captive_portal:

sensor:
  - platform: adc
    pin: 34
    id: ph_voltage
    name: Water pH Voltage
    attenuation: auto
    raw: false
    unit_of_measurement: V
    device_class: voltage
    update_interval: 15s
    filter:
      multiply: 1000.0

  - platform: custom
    lambda: |-
      auto ph_sensor = new GravityPhSensor(id(ph_voltage));
      return ph_sensor->sensors();
    sensors:
      - name: "Water pH"
        device_class: ph
        accuracy_decimals: 2

  - platform: adc
    pin: 35
    id: tds_voltage
    name: Water TDS Voltage
    attenuation: auto
    raw: false
    unit_of_measurement: V
    device_class: voltage
    update_interval: 15s
    filter:
      multiply: 1000.0

  - platform: custom
    lambda: |-
      auto tds_sensor = new GravityTdsSensor(id(tds_voltage), id(temp_c));
      return tds_sensor->sensors();
    sensors:
      - name: "Water TDS"
        unit_of_measurement: ppm
        accuracy_decimals: 2

  - name: "Temperature C"
    platform: dallas
    address: 0x953ce10457206428
    id: temp_c
    unit_of_measurement: "Â°C"
    device_class: temperature

  - platform: adc
    pin: 32
    name: "Water TSS Voltage"
    id: tss_voltage
    attenuation: auto
    unit_of_measurement: "V"
    device_class: "voltage"
    update_interval: 15s
    filter:
      multiply: 1000.0

  - platform: template
    name: "Water TSS"
    lambda: |-
      float x = id(tss_voltage).state;
      float x2 = x * x;
      return -2572.2 * x2 + 8700.5 * x - 4352.9;
    unit_of_measurement: "NTU"
    update_interval: 15s
